#include <YSI\y_hooks>

hook OnPlayerConnect(playerid) {
    
    playerData[playerid][pBoomboxNearby] = INVALID_PLAYER_ID;
}

hook OnPlayerDisconnect(playerid) {
 	
    if(playerData[playerid][pBoomboxPlaced]) ResetBoombox(playerid);
}

stock SetBoomboxURL(playerid, url[]) {
	if(playerData[playerid][pBoomboxPlaced]) {
	    format(playerData[playerid][pBoomboxURL], 128, url);

	    foreach(new i : Player)
        {
	        if(playerData[i][pBoomboxNearby] == playerid) {
	            PlayAudioStreamForPlayer(i, playerData[playerid][pBoomboxURL], playerData[playerid][pBoomboxX], playerData[playerid][pBoomboxY], playerData[playerid][pBoomboxZ], 30.0, true);
			}
		}
	}
}

stock StopBoomboxPlayback(playerid) {
    if(playerData[playerid][pBoomboxPlaced]) {
	    format(playerData[playerid][pBoomboxURL], 128, "None");

	    foreach(new i : Player)
        {
	        if(playerData[i][pBoomboxNearby] == playerid) {
	            StopAudioStreamForPlayer(i);
			}
		}
	}
}

stock GetNearbyBoombox(playerid) {
	foreach(new i : Player) {
		if(playerData[i][pBoomboxPlaced] && IsPlayerInRangeOfPoint(playerid, 30.0, playerData[i][pBoomboxX], playerData[i][pBoomboxY], playerData[i][pBoomboxZ]) && GetPlayerInterior(playerid) == playerData[i][pBoomboxInterior] && GetPlayerVirtualWorld(playerid) == playerData[i][pBoomboxWorld]) {
		    return i;
		}
	}

	return INVALID_PLAYER_ID;
}

stock ResetBoombox(playerid) {
	if(playerData[playerid][pBoomboxPlaced]) {
	    DestroyDynamicObject(playerData[playerid][pBoomboxObject]);
	    DestroyDynamic3DTextLabel(playerData[playerid][pBoomboxText]);
	}
	format(playerData[playerid][pBoomboxURL], 128, "None");

	playerData[playerid][pBoomboxPlaced] = 0;
	playerData[playerid][pBoomboxX] = 0.0;
	playerData[playerid][pBoomboxY] = 0.0;
	playerData[playerid][pBoomboxZ] = 0.0;
	playerData[playerid][pBoomboxInterior] = 0;
	playerData[playerid][pBoomboxWorld] = 0;
	playerData[playerid][pBoomboxText] = Text3D:INVALID_3DTEXT_ID;
}

CMD:boomboxhelp(playerid, params[]) {

    SendClientMessage(playerid, COLOR_WHITE, "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Boombox : /boombox (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á), ‡∏â‡∏±‡∏ô‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏≤‡∏ã‡∏∑‡πâ‡∏≠ Boombox ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô? ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö : ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ 24/7");
    return 1;
}

CMD:boombox(playerid, params[]) {
	new
	    Float:angle,
        string[128];

    if(playerData[playerid][pJailed] != 0)
		return SendClientMessage(playerid, COLOR_GRAD1, "‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏Ñ‡∏∏‡∏Å‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏∂‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Boombox ‡πÑ‡∏î‡πâ");

	if(playerData[playerid][pBoombox] == 0)
		return SendClientMessage(playerid, COLOR_GRAD1, "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ Boombox");

	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
	    return SendClientMessage(playerid, COLOR_GRAD1, "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô");

	if(playerData[playerid][pBoomboxPlaced]) {
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, playerData[playerid][pBoomboxX], playerData[playerid][pBoomboxY], playerData[playerid][pBoomboxZ]))
	        return SendClientMessage(playerid, COLOR_GRAD1, "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏±‡∏ö Boombox ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì");

		//ShowPlayerDialog(playerid, DIALOG_BOOMBOX, DIALOG_STYLE_LIST, "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Boombox", "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏•‡∏á\nLegend Radio Ch.12\nCOOL 93 Fahrenheit\nWink Radio\n‡∏Å‡∏≥‡∏´‡∏ô‡∏î URL\n‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á\n‡πÄ‡∏Å‡πá‡∏ö Boombox", "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å", "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å");
        Dialog_Show(playerid, Boombox, DIALOG_STYLE_LIST, "‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Boombox", "???? Boombox ???????? MP3 URL \n‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á\n ‡°Á∫ Boombox", "‡∏ï‡∏Å‡∏•‡∏á", "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å");
    }
	else {
	    if(GetNearbyBoombox(playerid) != INVALID_PLAYER_ID)
	        return SendClientMessage(playerid, COLOR_GRAD1, "‡∏°‡∏µ Boombox ‡πÉ‡∏ô‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß");

	    GetPlayerPos(playerid, playerData[playerid][pBoomboxX], playerData[playerid][pBoomboxY], playerData[playerid][pBoomboxZ]);
	    GetPlayerFacingAngle(playerid, angle);

	    format(string, sizeof(string), "{33AA33}Boombox ¢Õß§ÿ≥á %s\n {FFFFFF}‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /boombox ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á", ReturnPlayerName(playerid));

        playerData[playerid][pBoomboxPlaced] = 1;
        playerData[playerid][pBoomboxInterior] = GetPlayerInterior(playerid);
        playerData[playerid][pBoomboxWorld] = GetPlayerVirtualWorld(playerid);
        playerData[playerid][pBoomboxObject] = CreateDynamicObject(2102, playerData[playerid][pBoomboxX], playerData[playerid][pBoomboxY], playerData[playerid][pBoomboxZ] - 1.1, 0.0, 0.0, angle - 180, playerData[playerid][pBoomboxWorld], playerData[playerid][pBoomboxInterior]);
        playerData[playerid][pBoomboxText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, playerData[playerid][pBoomboxX], playerData[playerid][pBoomboxY], playerData[playerid][pBoomboxZ] - 0.8, 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, playerData[playerid][pBoomboxWorld], playerData[playerid][pBoomboxInterior]);

        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
		SendClientMessage(playerid, COLOR_YELLOW, "boombox ‰¥È«“ß∑’Ëæ◊Èπ‡√’¬∫√ÈÕ¬‡‡≈È« /boombox ‡æ◊ËÕ®—¥°“√°—∫¡—π");
	}

	return 1;
}

Dialog:Boombox(playerid, response, listitem, inputtext[]) {
	
    if(response)
	{
        switch (listitem)
        {
			case 0: {
	            //ShowPlayerDialog(playerid, DIALOG_BOOMBOX_URL, DIALOG_STYLE_INPUT, "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ URL", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà URL ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£\n‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö URL ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡∏£‡∏µ‡∏°‡∏°‡∏¥‡πà‡∏á", "‡πÄ‡∏•‡πà‡∏ô", "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å");
                Dialog_Show(playerid, BoomboxURL, DIALOG_STYLE_INPUT, "‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ URL Music", "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà‡∏•‡∏¥‡πâ‡∏á‡∏Ñ‡πå URL ‡∏Ç‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏Ñ‡∏ô‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡πÑ‡∏î‡πâ", "‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á", "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å");
            }
			case 1: {
			    StopBoomboxPlayback(playerid);
			    SendClientMessage(playerid, COLOR_YELLOW, "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á Boombox");
			}
	        case 2: {
				foreach(new i : Player)
                {
					if(playerData[i][pBoomboxNearby] == playerid) {
					    StopAudioStreamForPlayer(i);
	                }
	            }

	            ResetBoombox(playerid);

	            ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
	            SendClientMessage(playerid, COLOR_YELLOW, "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏Å‡πâ‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏Å‡πá‡∏ö Boombox ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÉ‡∏™‡πà‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤");
	        }
        }

    }
    return 1;
}

Dialog:BoomboxURL(playerid, response, listitem, inputtext[]) {
	
    if(response)
	{
	    if (isnull(inputtext))
	        return Dialog_Show(playerid, BoomboxURL, DIALOG_STYLE_INPUT, "‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ URL Music", "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà‡∏•‡∏¥‡πâ‡∏á‡∏Ñ‡πå URL ‡∏Ç‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏Ñ‡∏ô‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡πÑ‡∏î‡πâ", "‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á", "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å");

		SetBoomboxURL(playerid, inputtext);
    }
    return 1;
}

task BoomboxTimer[1000]() 
{
    foreach(new i : Player)
    {
        new boomboxid = GetNearbyBoombox(i);

        if(playerData[i][pBoomboxNearby] != boomboxid) {
            playerData[i][pBoomboxNearby] = boomboxid;

            if(boomboxid == INVALID_PLAYER_ID) {
                StopAudioStreamForPlayer(i);
            } else if(strcmp(playerData[boomboxid][pBoomboxURL], "None") != 0) {
                PlayAudioStreamForPlayer(i, playerData[boomboxid][pBoomboxURL], playerData[boomboxid][pBoomboxX], playerData[boomboxid][pBoomboxY], playerData[boomboxid][pBoomboxZ], 30.0, true);
            }
        }
    }
}
